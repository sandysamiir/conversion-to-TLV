#!/bin/bash

# Exit on any error
set -e

# cd to <repo_root>
cd "$(dirname "$0")"


# Make sure .venv is activated; if not, activate it and provide use instructions
# Test whether .venv/bin/activate has been done.
pip3 install --upgrade pip
if [ "$VIRTUAL_ENV" != "$(pwd)/.venv" ]; then
    if [ ! -d ".venv" ]; then
        python3 -m venv .venv
        echo "Created Python .venv"
    fi
    . .venv/bin/activate
    echo
    echo "============================================="
    echo "To use this repo, first activate it with:"
    echo "    . .venv/bin/activate"
    echo "============================================="
    echo
fi

# Install Python dependencies
pip install -r requirements.txt



# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to check Python version compatibility
check_python_version() {
    PYTHON_VERSION=$(python3 --version 2>&1 | grep -o '[0-9]\+\.[0-9]\+' | head -n1)
    MAJOR=$(echo $PYTHON_VERSION | cut -d. -f1)
    MINOR=$(echo $PYTHON_VERSION | cut -d. -f2)
    
    if [ "$MAJOR" -lt 3 ] || ([ "$MAJOR" -eq 3 ] && [ "$MINOR" -lt 9 ]); then
        echo "‚ö†Ô∏è  WARNING: Python $PYTHON_VERSION detected"
        echo "   SymbiYosys requires Python 3.9+ for modern type hints"
        echo "   You may encounter 'TypeError: type object is not subscriptable'"
        echo "   Consider upgrading Python or patching SymbiYosys after installation"
    fi
}

# Function to install system dependencies
install_system_deps() {
    echo "üîß Installing system dependencies..."
    if command_exists apt-get; then
        sudo apt-get update
        sudo apt-get install -y build-essential clang bison flex \
            libreadline-dev gawk tcl-dev libffi-dev git \
            graphviz xdot pkg-config python3 python3-pip \
            libboost-system-dev libboost-python-dev libboost-filesystem-dev \
            zlib1g-dev
    elif command_exists brew; then
        brew install bison flex readline gawk tcl-tk libffi git \
            graphviz boost python3
    else
        echo "‚ùå Error: No supported package manager found (apt-get or brew)"
        exit 1
    fi
}

# Function to install Yosys
install_yosys() {
    echo "üîß Installing Yosys..."
    if command_exists yosys; then
        echo "‚úÖ Yosys is already installed"
        return
    fi

    # Clone and build Yosys
    git clone https://github.com/YosysHQ/yosys.git
    cd yosys
    git submodule update --init --recursive
    make config-gcc
    make -j$(nproc)
    sudo make install
    cd ..
    rm -rf yosys
}

# Function to install SymbiYosys
install_symbiyosys() {
    echo "üîß Installing SymbiYosys..."
    if command_exists sby; then
        echo "‚úÖ SymbiYosys is already installed"
        return
    fi

    # Install Z3 solver
    if ! command_exists z3; then
        echo "Installing Z3 solver..."
        sudo apt-get install -y z3
    fi

    # Clone and build SymbiYosys
    git clone https://github.com/YosysHQ/SymbiYosys.git
    cd SymbiYosys
    sudo make install
    cd ..
    rm -rf SymbiYosys
}

# Function to install EQY
install_eqy() {
    echo "üîß Installing EQY..."
    if command_exists eqy; then
        echo "‚úÖ EQY is already installed"
        return
    fi

    # Clone and build EQY
    git clone https://github.com/YosysHQ/eqy.git
    cd eqy
    make
    sudo make install
    cd ..
    rm -rf eqy
}

# Main installation process
echo "üöÄ Starting installation process..."

# Check Python version compatibility first
check_python_version

# Install dependencies
install_system_deps

# Install EDA tools
install_yosys
install_symbiyosys
install_eqy

echo "‚úÖ Installation complete! The following tools are now available:"
echo "  - Yosys: $(yosys --version)"
echo "  - SymbiYosys"
echo "  - EQY"
echo "  - Python packages: pynput, openai"